@using BLL.Interface.Models
@using MvcUI.Helpers

@model MvcUI.ViewModels.LotsViewModel

@{
    var lotsCountOnPage = new List<SelectListItem>
    {
        new SelectListItem {Text = "5", Value = "5"},
        new SelectListItem {Text = "10", Value = "10"},
        new SelectListItem {Text = "20", Value = "20"},
        new SelectListItem {Text = "30", Value = "30"}
    };
}

<div class="row">
    <div class="col-md-4">
        @using (Ajax.BeginForm("Lots", "LotManager", null, new AjaxOptions { HttpMethod = "GET", InsertionMode = InsertionMode.Replace, UpdateTargetId = "lotList" }))
        {
            <div class="validation-search-errors">
                @Html.DisplayFor(r => r.SearchErrors)
            </div>

            @Html.Label("Lots number on page:")
            @Html.DropDownList("LotsCountOnPage", lotsCountOnPage, new {@class = "form-control"});
            <br/>

            @Html.Label("Search by author artwork:")
            @Html.TextBoxFor(r => r.SearchPictureAuthor, new { @class="form-control"})
            <br/>

            @Html.Label("Search by artwork name:")
            @Html.TextBoxFor(r => r.SearchArtworkName, new { @class = "form-control" })
            <br/>

            @Html.Label("Min price:")
            @Html.TextBoxFor(r => r.SearchMinPrice, new { @class = "form-control", @type = "number", @min = "0" })
            <br/>

            @Html.Label("Max price:")
            @Html.TextBoxFor(r => r.SearchMaxPrice, new { @class = "form-control", @type = "number", @min = "0" })
            <br/>

            @Html.Label("Order by auction date:")
            @Html.CheckBoxFor(r => r.OrderByAuctionDate)
            <br/>

            @Html.HiddenFor(r => r.Tab)
            @Html.HiddenFor(r => r.LotsCountOnPage)

            <input type="submit" class="btn" value="search"/>
        }

    </div>
    <div class="col-md-8">

        @foreach (BLLLot lot in Model.Lots)
        {
            var lotClass = "class=lot";
            if (Model.Tab == "my_rates_lots" && lot.CurrentBuyerId != Model.CurrentUserId)
            {
                lotClass = "class=warning-lot";
            }
            else if (lot.LotIsFinishedAuction)
            {
                lotClass = "class=finished-lot";
            }

            <fieldset @lotClass>
                <div class="row">
                    <div class="col-md-6">
                        <div>
                            Name: <b>@lot.ArtworkName</b>
                        </div>
                        <div>
                            Author of image: <b>@lot.Author</b>
                        </div>
                        <div>
                            Artwork format: <b>@lot.ArtworkFormat</b>
                        </div>
                        <div>
                            Current price: <b>@lot.CurrentPrice</b>
                        </div>
                        <b>@Html.ActionLink("View details", "Lot", "LotManager", new {id = lot.Id}, null)</b>
                    </div>
                    <div class="col-md-6 right-align">
                        <img src="@lot.Photos" class="lot-image-in-list"/>
                    </div>
                </div>
            </fieldset>
            <br/>
        }

    </div>
</div>

<div class="center-align">
    @Html.LotsPageLinks(Model, "lotList", x => Url.Action("Lots", "LotManager",
        new
        {
            PageNumber = x,
            Tab = Model.Tab,
            LotsCountOnPage = Model.LotsCountOnPage,
            SearchPictureAuthor = Model.SearchPictureAuthor,
            SearchMinPrice = Model.SearchMinPrice,
            SearchMaxPrice = Model.SearchMaxPrice,
            SearchArtworkName = Model.SearchArtworkName,
            OrderByAuctionDate = Model.OrderByAuctionDate
        }),
    "showLoadingAnimation()")
</div>